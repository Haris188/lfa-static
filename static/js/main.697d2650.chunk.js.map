{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","components/Logo.js","api/get.js","api/post.js","controllers/Controllers.js","layouts/DashboardLayout/TopBar.js","views/loadingView/LoadingView.js","views/loadingView/index.js","presenters/Presenters.js","components/WithAuthGate.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/users/UserListView/Results.js","utils/getInitials.js","views/users/UserListView/Toolbar.js","views/users/UserListView/View.js","views/users/UserListView/Container.js","views/users/UserListView/index.js","views/reports/DashboardView/Sales.js","views/reports/DashboardView/TrafficByDevice.js","views/reports/DashboardView/View.js","views/reports/DashboardView/Container.js","views/reports/DashboardView/index.js","views/auth/DemoUserSignIn/View.js","data/roles.js","views/auth/DemoUserSignIn/index.js","views/auth/DemoUserSignIn/Container.js","views/auth/Login/View.js","views/auth/Login/LoginView.js","views/auth/Login/Container.js","views/errors/NotFoundView.js","views/project/ProjectListView/ProjectListItem.js","views/project/ProjectListView/ProjectList.js","views/project/ProjectListView/View.js","views/project/ProjectListView/Container.js","views/project/ProjectListView/index.js","views/auth/Register/View.js","views/auth/Register/index.js","views/auth/Register/Container.js","components/LabelGroup.js","views/project/ProjectDetails/View.js","views/project/ProjectDetails/index.js","views/project/ProjectDetails/Container.js","views/project/ProjectPeople/View.js","views/project/ProjectPeople/index.js","views/project/ProjectPeople/Container.js","views/ticket/TicketListView/Results.js","views/ticket/TicketListView/Toolbar.js","views/ticket/TicketListView/View.js","views/ticket/TicketListView/Container.js","views/ticket/TicketListView/index.js","views/ticket/TicketView/TicketInfo.js","views/ticket/TicketComments/CommentListItem.js","views/ticket/TicketComments/View.js","views/ticket/TicketComments/index.js","views/ticket/TicketComments/Container.js","views/ticket/TicketAttachments/View.js","views/ticket/TicketAttachments/index.js","views/ticket/TicketAttachments/Container.js","views/ticket/TicketView/TicketMenu.js","views/ticket/TicketView/View.js","views/ticket/TicketView/Container.js","views/ticket/TicketView/index.js","views/project/ProjectView/View.js","views/project/ProjectView/Container.js","views/project/ProjectView/index.js","views/project/AddProjectView/AddProjectForm.js","views/project/AddProjectView/AddProjectUserSelector.js","views/project/AddProjectView/View.js","views/project/AddProjectView/Container.js","views/project/AddProjectView/index.js","views/ticket/AddTicketView/View.js","views/ticket/AddTicketView/Container.js","views/ticket/AddTicketView/index.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","paletteCustom","colors","common","white","indigo","blueGrey","background","dark","default","paper","primary","main","secondary","text","theme","createMuiTheme","palette","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","item","display","paddingTop","paddingBottom","button","color","fontWeightMedium","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","show","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","mobileDrawer","desktopDrawer","avatar","cursor","NavBar","currentUser","onMobileClose","openMobile","useLocation","items","BarChartIcon","UsersIcon","role","ShoppingBagIcon","useEffect","pathname","content","Box","flexDirection","alignItems","p","Avatar","name","Typography","variant","Divider","List","map","key","flexGrow","Hidden","lgUp","Drawer","anchor","onClose","open","mdDown","defaultProps","Logo","props","alt","src","axios","defaults","withCredentials","path","process","get","response","data","success","console","log","postData","post","signin","email","password","alert","send","res","signup","deleteUser","id","deleteeId","deleteProject","attachImgToTicket","formData","addCommentToTicket","commentData","deleteTicket","ticketId","addNewProject","addNewTicket","assignUserToTicket","completeTicket","logout","root","TopBar","onMobileNavOpen","useState","navigate","useNavigate","handleLogout","Controllers","AppBar","elevation","IconButton","onClick","Container","styled","div","LoadingView","CircularProgress","getAllUsers","getAllProjects","getCurrentUserTickets","projectId","getImagesForTicket","urlArr","url","getCommentsForTicket","getProjectUsersFromApi","getAllBugStats","getCurrentUser","WithAuthGate","loading","auth","setAuth","Child","children","fetchCurrentUserFromApi","Presenters","loggedIn","replace","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","DashboardLayoutGate","toolbar","MainLayout","Page","forwardRef","ref","Helmet","Results","deleteCustomer","customers","Card","minWidth","length","style","marginLeft","Table","TableHead","TableRow","TableCell","TableBody","customer","hover","avatarUrl","split","slice","v","toUpperCase","join","getInitials","Delete","importButton","exportButton","Toolbar","handleFindChange","mt","CardContent","maxWidth","TextField","onChange","fullWidth","InputProps","startAdornment","InputAdornment","position","SvgIcon","placeholder","minHeight","CustomerListView","container","searchName","users","setUsers","setLoading","filteredUsers","setFilteredUsers","getUsersFromApi","userResponse","e","searchTerm","target","value","result","filter","o","regex","RegExp","Sales","bugStats","useTheme","datasets","lowPr","mediumPr","highPr","label","labels","animation","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","CardHeader","TrafficByDevice","cutoutPercentage","fixed","notFixed","red","hoverBorderColor","bugStatsData","Done","BugReport","textAlign","View","Grid","lg","md","xl","xs","setBugStats","getBugStatsFromApi","statsRes","model","gutterBottom","select","setRole","roleIndex","roles","MenuItem","marginTop","handleSignin","setRoleState","LoginView","initialValues","validationSchema","Yup","shape","max","required","onSubmit","values","handleSignIn","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","mb","align","error","helperText","onBlur","type","my","disabled","setDemoUserModalToOpen","Link","Modal","setDemoUserModalToClose","DemoUserSignIn","setOpen","signInRes","image","NotFoundView","ProjectListItem","project","navigateToProject","navigateToDetails","ListItemAvatar","ListItemText","bugs","description","ProjectList","projects","userEligible","navigateToAddProject","marginBottom","setProjects","getProjectsFromApi","projectsResult","state","RegisterView","firstName","lastName","policy","oneOf","handleSignupSubmit","ml","Checkbox","checked","underline","FormHelperText","accountData","userSpecificData","signupResult","LabelGroup","user","usersRes","handleTicketClick","tickets","checkDisabled","ticket","completed","problem","priority","navigateToNewTicket","ProjectDetails","ProjectPeople","Tickets","setTickets","filteredTickets","setFilteredTickets","getTicketsFromApi","ticketResponse","TicketInfo","submitForm","initialUser","newUserSubmitLoading","sm","CommentListItem","comment","username","Form","form","CommentsContainer","ticketCompleted","submitComment","changeCommentValue","commentField","commentError","addLoading","comments","setAddLoading","setComments","setCommentError","setCommentField","getCommentsFromApi","commentRes","preventDefault","Image","img","attachLoading","uploadImg","multiple","AddPhotoAlternate","flexWrap","attachments","att","openImage","imageOpen","closeImage","maxHeight","openedImage","setAttachLoading","setAttachments","setImageOpen","setOpenedImage","getImagesFromApi","imagesRes","files","FormData","append","TicketMenu","handleDelete","deleteThisTicket","changeTicketUser","currentlyAssingedUser","TicketComments","TicketAttachments","setNewUserSubmitLoading","projectid","userRes","find","userid","setAssignedUser","userId","protTypes","object","AddProjectForm","multiline","rows","AddProjectUserSelector","selectUser","userLoading","submitProject","submitLoading","selected","formDone","setUserLoading","setFormDone","setFormData","setSubmitLoading","submitRes","updatedUsers","userIndex","priorities","routes","element","AddProjectView","exact","AddTicketView","DashboardView","ProjectView","ProjectListView","TicketListView","TicketView","Register","App","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.697d2650.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","import { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst paletteDefault = {\n  background: {\n    dark: '#F4F6F8',\n    default: colors.common.white,\n    paper: colors.common.white\n  },\n  primary: {\n    main: colors.indigo[500]\n  },\n  secondary: {\n    main: colors.indigo[500]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600]\n  }\n};\n\nconst paletteCustom = {\n  background: {\n    dark: '#F4F6F8',\n    default: colors.common.white,\n    paper: colors.common.white\n  },\n  primary: {\n    main: colors.indigo[500]\n  },\n  secondary: {\n    main: colors.indigo[500]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600]\n  }\n};\n\nconst theme = createMuiTheme({\n  palette: paletteCustom,\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  show,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return show\n    ? (\n      <ListItem\n        className={clsx(classes.item, className)}\n        disableGutters\n        {...rest}\n      >\n        <Button\n          activeClassName={classes.active}\n          className={classes.button}\n          component={RouterLink}\n          to={href}\n        >\n          {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n          )}\n          <span className={classes.title}>\n            {title}\n          </span>\n        </Button>\n      </ListItem>\n    )\n    : <></>;\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string,\n  show: PropTypes.bool\n};\n\nexport default NavItem;\n","import React, { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  BarChart as BarChartIcon,\n  ShoppingBag as ShoppingBagIcon,\n  Users as UsersIcon\n} from 'react-feather';\nimport NavItem from './NavItem';\n\nconst user = {\n  avatar: '/static/images/avatars/avatar_6.png',\n  jobTitle: 'Senior Developer',\n  name: 'Katarina Smith'\n};\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  },\n  avatar: {\n    cursor: 'pointer',\n    width: 64,\n    height: 64\n  }\n}));\n\nconst NavBar = ({ currentUser, onMobileClose, openMobile }) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const items = [\n    {\n      href: '/app/dashboard',\n      icon: BarChartIcon,\n      title: 'Dashboard',\n      show: true\n    },\n    {\n      href: '/app/customers',\n      icon: UsersIcon,\n      title: 'Users',\n      show: currentUser.role === 'admin'\n    },\n    {\n      href: '/app/projects',\n      icon: ShoppingBagIcon,\n      title: 'Projects',\n      show: true\n    },\n  ];\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      height=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box\n        alignItems=\"center\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        p={2}\n      >\n        <Avatar>\n          {currentUser.name[0]}\n        </Avatar>\n        <Typography\n          className={classes.name}\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          {currentUser.name}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {currentUser.role}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box p={2}>\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n              show={item.show}\n            />\n          ))}\n        </List>\n      </Box>\n      <Box flexGrow={1} />\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool,\n  currentUser: PropTypes.object\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\n\nexport default NavBar;\n","import React from 'react';\n\nconst Logo = (props) => {\n  return (\n    <img\n      alt=\"Logo\"\n      src=\"/static/logo.svg\"\n      width=\"50em\"\n      {...props}\n    />\n  );\n};\n\nexport default Logo;\n","import axios from 'axios';\n\naxios.defaults.withCredentials = true;\n\nexport default async (path) => {\n  const api = process.env.REACT_APP_API_URL;\n\n  try {\n    const response = await\n    axios.get(`${api}${path}`);\n\n    const { data } = response;\n\n    if (data) {\n      return data;\n    }\n\n    return {\n      success: false,\n      data: 'Data from api is null'\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      success: false,\n      data: 'Data from api is null'\n    };\n  }\n};\n","import axios from 'axios';\n\naxios.defaults.withCredentials = true;\n\nexport default async (path, postData) => {\n  const api = process.env.REACT_APP_API_URL;\n\n  try {\n    const response = await\n    axios.post(`${api}${path}`, postData);\n\n    const { data } = response;\n\n    if (data) {\n      return data;\n    }\n\n    return {\n      success: false,\n      data: 'Data from api is null'\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      success: false,\n      data: 'Data from api is null'\n    };\n  }\n};\n","import get from 'src/api/get';\nimport send from '../api/post';\n\nconst signin = async (email, password) => {\n  alert('Server is running on Heroku. It will take about 30 sec for first sign in')\n  const postData = { email, password };\n  const res = await send('/login', postData);\n  return res.success && res.data\n    ? res\n    : { success: res.data, data: null };\n};\n\nconst signup = async (data) => {\n  const res = await send('/signup', data);\n  return res;\n};\n\nconst deleteUser = async (id) => {\n  const res = await send('/removeUser', {\n    deleteeId: id\n  });\n\n  return res;\n};\n\nconst deleteProject = async (id) => {\n  console.log(id);\n  return {\n    success: true,\n    data: null\n  };\n};\n\nconst attachImgToTicket = async (formData) => {\n  const res = await\n  send('/fileupload', formData);\n  return res;\n};\n\nconst addCommentToTicket = async (commentData) => {\n  const res = await\n  send('/addCommentToTicket', commentData);\n  return res;\n};\n\nconst deleteTicket = (ticketId) => {\n  return {\n    success: true,\n    data: null\n  };\n};\n\nconst addNewProject = async (data) => {\n  const res = await\n  send('/addProject', data);\n  return res;\n};\n\nconst addNewTicket = async (data) => {\n  const res = await\n  send('/addTicket', data);\n  return res;\n};\n\nconst assignUserToTicket = async (data) => {\n  const res = await\n  send('/setTicketUser', data);\n  return res;\n};\n\nconst completeTicket = async (ticketId) => {\n  const res = await\n  send('/completeTicket', { ticketId });\n  return res;\n};\n\nconst logout = async ()=>{\n  const res = await\n  get('/logout');\n  return res;\n}\n\nexport default {\n  signin,\n  signup,\n  deleteUser,\n  deleteProject,\n  attachImgToTicket,\n  addCommentToTicket,\n  deleteTicket,\n  addNewProject,\n  addNewTicket,\n  assignUserToTicket,\n  completeTicket,\n  logout\n};\n","import React, { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport Logo from 'src/components/Logo';\nimport Controllers from 'src/controllers/Controllers';\nimport zIndex from '@material-ui/core/styles/zIndex';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [notifications] = useState([]);\n  const navigate = useNavigate();\n\n  const handleLogout = async () => {\n    const res = await\n    Controllers.logout();\n\n    if (res.success) {\n      navigate('/');\n    } else {\n      alert('Logout failed');\n    }\n  };\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <RouterLink to=\"/app/dashboard\">\n          <Logo />\n        </RouterLink>\n        <Box flexGrow={1} />\n        <IconButton\n          color=\"inherit\"\n          onClick={handleLogout}\n        >\n          <InputIcon />\n        </IconButton>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n","import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height:100%;\n  justify-content:center;\n  align-items: center;\n`;\n\nconst LoadingView = () => (\n  <Container>\n    <CircularProgress />\n  </Container>\n);\n\nexport default LoadingView;\n","import LoadingView from './LoadingView';\n\nexport default LoadingView;\n","import { v4 as uuid } from 'uuid';\nimport get from '../api/get';\nimport post from '../api/post';\n\nconst getAllUsers = async () => {\n  const res = await\n  get('/getAllUsers');\n\n  return res;\n};\n\nconst getAllProjects = async () => {\n  const res = await\n  get('/getAllProjectsForUser');\n  return res;\n};\n\nconst getCurrentUserTickets = async (projectId) => {\n  const res = await\n  post('/getCurrentUserTickets', { projectId });\n  return res;\n};\n\nconst getImagesForTicket = async (ticketId) => {\n  const res = await\n  post('/getTicketAttachments', { ticketId });\n\n  if (res.success) {\n    const urlArr = res.success\n    && res.data.map((i) => (i.url));\n\n    res.data = urlArr;\n  }\n\n  return res;\n};\n\nconst getCommentsForTicket = async (ticketId) => {\n  const res = await\n  post('/getCommentsForTicket', { ticketId });\n  return res;\n};\n\nconst getProjectUsersFromApi = async (projectId) => {\n  const res = await\n  post('/getUsersForProject', { projectId });\n  return res;\n};\n\nconst getAllBugStats = async () => {\n  const res = await get('/getTicketStats');\n  return res;\n};\n\nconst getCurrentUser = async () => {\n  const res = await get('/getCurrentUser');\n  return res;\n};\n\nexport default {\n  getAllUsers,\n  getAllProjects,\n  getCurrentUserTickets,\n  getImagesForTicket,\n  getCommentsForTicket,\n  getProjectUsersFromApi,\n  getAllBugStats,\n  getCurrentUser\n};\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport LoadingView from 'src/views/loadingView';\nimport Presenters from 'src/presenters/Presenters';\nimport { element, array, oneOfType } from 'prop-types';\n\nconst WithAuthGate = (props) => {\n  // const auth:any = useContext(AuthContext)\n  const navigate = useNavigate();\n  const [auth, setAuth] = useState({ loading: true });\n  const { children } = props;\n  const Child = children;\n\n  console.log('AUTH GATE');\n\n  const fetchCurrentUserFromApi = async () => {\n    const res = await Presenters.getCurrentUser();\n    if (res && res.success) {\n      setAuth(res.data);\n    }\n  };\n\n  useEffect(() => {\n    fetchCurrentUserFromApi();\n  }, []);\n\n  if (auth.loading) {\n    return LoadingView;\n  }\n  if (auth.loggedIn) {\n    return <Child {...props} currentUser={auth} />;\n  }\n\n  navigate('/', { replace: true });\n  return <></>;\n};\n\nWithAuthGate.propTypes = {\n  children: oneOfType(element, array)\n};\n\nexport default WithAuthGate;\n","import React, { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\nimport WithAuthGate from 'src/components/WithAuthGate';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst DashboardLayout = (props) => {\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n  const {currentUser} = props;\n\n  return (\n    <div className={classes.root}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n        currentUser={currentUser}\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst DashboardLayoutGate = ()=>(\n  <WithAuthGate>\n    {DashboardLayout}\n  </WithAuthGate>\n);\n\nexport default DashboardLayoutGate;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport Logo from 'src/components/Logo';\n\nconst useStyles = makeStyles(({\n  root: {},\n  toolbar: {\n    height: 64\n  }\n}));\n\nconst TopBar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar className={classes.toolbar}>\n        <RouterLink to=\"/app/dashboard\">\n          <Logo />\n        </RouterLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopBar;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst MainLayout = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  makeStyles, IconButton\n} from '@material-ui/core';\nimport {\n  Delete\n} from '@material-ui/icons';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({\n  deleteCustomer, className, customers, ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          {customers.length < 1\n            ? (\n              <Typography\n                variant=\"body1\"\n                style={{\n                  marginLeft: '1em'\n                }}\n              >\n                No user available\n              </Typography>\n            )\n            : (\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      Name\n                    </TableCell>\n                    <TableCell>\n                      Email\n                    </TableCell>\n                    <TableCell>\n                      Role\n                    </TableCell>\n                    <TableCell>\n                      Delete\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {customers.map((customer) => (\n                    <TableRow\n                      hover\n                      key={customer.id}\n                    >\n                      <TableCell>\n                        <Box\n                          alignItems=\"center\"\n                          display=\"flex\"\n                        >\n                          <Avatar\n                            className={classes.avatar}\n                            src={customer.avatarUrl}\n                          >\n                            {getInitials(customer.name)}\n                          </Avatar>\n                          <Typography\n                            color=\"textPrimary\"\n                            variant=\"body1\"\n                          >\n                            {customer.name}\n                          </Typography>\n                        </Box>\n                      </TableCell>\n                      <TableCell>\n                        {customer.email}\n                      </TableCell>\n                      <TableCell>\n                        {customer.role}\n                      </TableCell>\n                      <TableCell>\n                        <IconButton onClick={() => { deleteCustomer(customer.id); }}>\n                          <Delete />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            )}\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array.isRequired,\n  deleteCustomer: PropTypes.func\n};\n\nexport default Results;\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ handleFindChange, className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                onChange={handleFindChange}\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Search customer\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string,\n  handleFindChange: PropTypes.func\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { object } from 'prop-types';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst CustomerListView = (props) => {\n  const classes = useStyles();\n  const { container } = props;\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Customers\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar\n          handleFindChange={container.searchName}\n        />\n        <Box mt={3}>\n          <Results\n            deleteCustomer={container.deleteUser}\n            customers={container.users}\n          />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nCustomerListView.propTypes = {\n  container: object\n};\n\nexport default CustomerListView;\n","import React, { useState, useEffect } from 'react';\nimport { filter } from 'lodash';\nimport WithAuthGate from 'src/components/WithAuthGate';\nimport View from './View';\nimport LoadingView from '../../loadingView';\nimport Controllers from '../../../controllers/Controllers';\nimport Presenters from '../../../presenters/Presenters';\n\nconst Container = (props) => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n\n  const getUsersFromApi = async () => {\n    const userResponse = await Presenters.getAllUsers();\n    if (userResponse.success) {\n      setUsers(userResponse.data);\n      setFilteredUsers(userResponse.data);\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getUsersFromApi();\n  }, []);\n\n  const deleteUser = async (id) => {\n    const deleteResponse = await\n    Controllers.deleteUser(id);\n\n    if (deleteResponse.success) await getUsersFromApi();\n    else {\n      alert('User deletion failed');\n    }\n  };\n\n  const match = (name, searchTerm) => {\n    const regex = new RegExp(searchTerm, 'i');\n    return name.match(regex);\n  };\n\n  const searchName = (e) => {\n    const searchTerm = e.target.value;\n    if (searchTerm.length > 0) {\n      const result = filter(users, (o) => (match(o.name, searchTerm)));\n      setFilteredUsers(result);\n    } else {\n      setFilteredUsers(users);\n    }\n  };\n\n  return loading\n    ? <LoadingView />\n    : (\n      <View\n        {...props}\n        container={{\n          users: filteredUsers,\n          deleteUser,\n          searchName\n        }}\n      />\n    );\n};\n\nconst ContainerGate = () => (\n  <WithAuthGate>\n    {Container}\n  </WithAuthGate>\n);\n\nexport default ContainerGate;\n","import Container from './Container';\n\nexport default Container;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({\n  className,\n  bugStats,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.indigo[500],\n        data: [\n          bugStats.lowPr,\n          bugStats.mediumPr,\n          bugStats.highPr\n        ],\n        label: 'Tickets'\n      }\n    ],\n    labels: ['Low', 'Medium', 'High']\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 5,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          barThickness: 40,\n          maxBarThickness: 40,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Tickets\"\n      />\n      <Divider />\n      <CardContent>\n        <Box\n          height={400}\n          position=\"relative\"\n        >\n          <Bar\n            data={data}\n            options={options}\n          />\n        </Box>\n      </CardContent>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      />\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string,\n  bugStats: PropTypes.object\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n  makeStyles,\n  useTheme,\n  colors\n} from '@material-ui/core';\n\nimport {\n  BugReport,\n  Done\n} from '@material-ui/icons';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst TrafficByDevice = ({\n  className,\n  bugStats,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const options = {\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    legend: {\n      display: false\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  const data = {\n    datasets: [\n      {\n        data: [bugStats.fixed, bugStats.notFixed],\n        backgroundColor: [\n          colors.indigo[500],\n          colors.red[600],\n        ],\n        borderWidth: 8,\n        borderColor: colors.common.white,\n        hoverBorderColor: colors.common.white\n      }\n    ],\n    labels: ['Fixed', 'Not Fixed']\n  };\n\n  const bugStatsData = [\n    {\n      title: 'Fixed',\n      value: bugStats.fixed,\n      icon: Done,\n      color: colors.indigo[500]\n    },\n    {\n      title: 'Not Fixed',\n      value: bugStats.notFixed,\n      icon: BugReport,\n      color: colors.red[600]\n    }\n  ];\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Bug Circle\" />\n      <Divider />\n      <CardContent>\n        <Box\n          height={300}\n          position=\"relative\"\n        >\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </Box>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mt={2}\n        >\n          {bugStatsData.map(({\n            color,\n            icon: Icon,\n            title,\n            value\n          }) => (\n            <Box\n              key={title}\n              p={1}\n              textAlign=\"center\"\n            >\n              <Icon color=\"action\" />\n              <Typography\n                color=\"textPrimary\"\n                variant=\"body1\"\n              >\n                {title}\n              </Typography>\n              <Typography\n                style={{ color }}\n                variant=\"h2\"\n              >\n                {value}\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTrafficByDevice.propTypes = {\n  className: PropTypes.string,\n  bugStats: PropTypes.object\n};\n\nexport default TrafficByDevice;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { object } from 'prop-types';\nimport Sales from './Sales';\nimport TrafficByDevice from './TrafficByDevice';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst View = (props) => {\n  const classes = useStyles();\n  const { container } = props;\n\n  return container.bugStats\n    ? (\n      <Page\n        className={classes.root}\n        title=\"Dashboard\"\n      >\n        <Container maxWidth={false}>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              lg={4}\n              md={6}\n              xl={3}\n              xs={12}\n            >\n              <TrafficByDevice\n                bugStats={container.bugStats}\n              />\n            </Grid>\n            <Grid\n              item\n              lg={8}\n              md={12}\n              xl={9}\n              xs={12}\n            >\n              <Sales\n                bugStats={container.bugStats}\n              />\n            </Grid>\n          </Grid>\n        </Container>\n      </Page>\n    )\n    : (\n      <Typography>\n        No data to display\n      </Typography>\n    );\n};\n\nView.propTypes = {\n  container: object\n};\n\nexport default View;\n","import React, { useState, useEffect } from 'react';\nimport WithAuthGate from 'src/components/WithAuthGate';\nimport Presenters from 'src/presenters/Presenters';\nimport LoadingView from 'src/views/loadingView';\nimport View from './View';\n\nconst Container = (props) => {\n  const [bugStats, setBugStats] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const getBugStatsFromApi = async () => {\n    const statsRes = await\n    Presenters.getAllBugStats();\n\n    if (statsRes && statsRes.success) {\n      setBugStats(statsRes.data);\n    } else {\n      alert('Problem occured while fetching data');\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getBugStatsFromApi();\n  }, []);\n\n  return loading\n    ? <LoadingView />\n    : (\n      <View\n        container={{\n          bugStats\n        }}\n      />\n    );\n};\n\nconst ContainerGate = () => (\n  <WithAuthGate>\n    {Container}\n  </WithAuthGate>\n);\n\nexport default ContainerGate;\n","import Container from './Container';\n\nexport default Container;\n","import React from 'react';\nimport {\n  Button,\n  MenuItem,\n  Card,\n  CircularProgress,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { object } from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  padding: 1em;\n  width:100%;\n  display:flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst View = (props) => {\n  const { model } = props;\n\n  return (\n    <Container>\n      <Card\n        style={{\n          width: '100%',\n          maxWidth: 400,\n          padding: '1em'\n        }}\n      >\n        <Typography\n          variant=\"h2\"\n          gutterBottom\n        >\n          Demo user login\n        </Typography>\n        <Typography\n          variant=\"body1\"\n          gutterBottom\n        >\n          Select a role\n        </Typography>\n        <TextField\n          select\n          fullWidth\n          onChange={model.setRole}\n          value={model.roleIndex}\n          variant=\"outlined\"\n        >\n          {model.roles.map((role, index) => (\n            <MenuItem\n              key={role.title}\n              value={index}\n            >\n              {role.title}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        { model.loading\n          ? (\n            <CircularProgress\n              size=\"1em\"\n              style={{\n                marginTop: '1em'\n              }}\n            />\n          )\n          : (\n            <Button\n              fullWidth\n              color=\"primary\"\n              variant=\"contained\"\n              style={{\n                marginTop: '1em'\n              }}\n              onClick={model.handleSignin}\n            >\n              Sign In\n            </Button>\n          )}\n      </Card>\n    </Container>\n  );\n};\n\nView.propTypes = {\n  model: object\n};\n\nexport default View;\n","export default [\n  {\n    title: 'admin',\n    email: 'admin-demo@bug.com',\n    password: 'anypass'\n  },\n  {\n    title: 'tester',\n    email: 'tester-demo@bug.com',\n    password: 'anypass'\n  },\n  {\n    title: 'projectManager',\n    email: 'projectManager-demo@bug.com',\n    password: 'anypass'\n  },\n  {\n    title: 'developer',\n    email: 'developer-demo@bug.com',\n    password: 'anypass'\n  }\n];\n","import Container from './Container';\n\nexport default Container;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport View from './View';\nimport Controllers from '../../../controllers/Controllers';\nimport roles from '../../../data/roles';\n\nconst Model = (props) => {\n  const [roleIndex, setRoleState] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const role = roles[roleIndex];\n\n  const setRole = (e) => {\n    setRoleState(e.target.value);\n  };\n\n  const alertFailLogin = () => {\n    setLoading(false);\n    alert('Login failed');\n  };\n\n  const handleSignin = async () => {\n    setLoading(true);\n    const signinResult = await\n    Controllers.signin(\n      role.email,\n      role.password\n    );\n    if (signinResult.success) navigate('/app/dashboard');\n    else alertFailLogin();\n  };\n\n  return (\n    <View\n      {...props}\n      model={{\n        role,\n        roleIndex,\n        roles,\n        setRole,\n        loading,\n        handleSignin\n      }}\n    />\n  );\n};\n\nexport default Model;\n","import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  Link,\n  TextField,\n  Typography,\n  makeStyles,\n  Modal\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { object, func } from 'prop-types';\nimport DemoUserSignIn from '../DemoUserSignIn';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst LoginView = (props) => {\n  const classes = useStyles();\n  const {\n    model\n  } = props;\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Login\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              password: ''\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n              password: Yup.string().max(255).required('Password is required')\n            })}\n            onSubmit={(values) => {\n              model.handleSignIn(values);\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Sign in\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    Login with email and password\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign in now\n                  </Button>\n                </Box>\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    variant=\"contained\"\n                    onClick={model.setDemoUserModalToOpen}\n                  >\n                    Sign in as Demo User\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Don&apos;t have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/register\"\n                    variant=\"h6\"\n                  >\n                    Sign up\n                  </Link>\n                  <Modal\n                    open={model.open}\n                    onClose={model.setDemoUserModalToClose}\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center'\n                    }}\n                  >\n                    <DemoUserSignIn />\n                  </Modal>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nLoginView.propTypes = {\n  model: object\n};\n\nexport default LoginView;\n","import Container from './Container';\n\nexport default Container;\n","import React, { useState } from 'react';\nimport Controllers from 'src/controllers/Controllers';\nimport { useNavigate } from 'react-router-dom';\nimport View from './View';\n\nconst LoginModel = (props) => {\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(false);\n\n  const setDemoUserModalToOpen = () => {\n    setOpen(true);\n  };\n\n  const setDemoUserModalToClose = () => {\n    setOpen(false);\n  };\n\n  const handleSignIn = async (values) => {\n    const signInRes = await Controllers.signin(\n      values.email,\n      values.password\n    );\n\n    alert('Server is running on Heroku. It will take about 30 sec for first sign in')\n\n    if (signInRes.success) {\n      navigate('/app/dashboard');\n    } else {\n      alert('Failed to signin');\n    }\n  };\n\n  return (\n    <View\n      {...props}\n      model={{\n        open,\n        setDemoUserModalToClose,\n        setDemoUserModalToOpen,\n        handleSignIn\n      }}\n    />\n  );\n};\n\nexport default LoginModel;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  image: {\n    marginTop: 50,\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 560\n  }\n}));\n\nconst NotFoundView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"404\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"md\">\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"h1\"\n          >\n            404: The page you are looking for isn’t here\n          </Typography>\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"subtitle2\"\n          >\n            You either tried some shady route or you came here by mistake.\n            Whichever it is, try using the navigation\n          </Typography>\n          <Box textAlign=\"center\">\n            <img\n              alt=\"Under development\"\n              className={classes.image}\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            />\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  Typography,\n  ListItemAvatar,\n  Avatar,\n  ListItemSecondaryAction,\n  IconButton,\n  Link\n} from '@material-ui/core';\nimport {\n  Delete\n} from '@material-ui/icons';\nimport styled from 'styled-components';\nimport { func, object } from 'prop-types';\n\nconst HideMobile = styled.div`\n  @media only screen and (max-width:480px){\n    display:none;\n  }\n`;\n\nconst ProjectListItem = (props) => {\n  const {\n    project,\n    deleteProject,\n    navigateToProject,\n    navigateToDetails\n  } = props;\n\n  return (\n    <ListItem\n      button\n      onClick={() => { navigateToProject(project); }}\n    >\n      <ListItemAvatar>\n        <Avatar>{project.name[0]}</Avatar>\n      </ListItemAvatar>\n      <ListItemText>\n        <Typography\n          gutterBottom\n          variant=\"h4\"\n          style={{\n            fontWeight: 'normal'\n          }}\n        >\n          {project.name}\n        </Typography>\n        <Typography>\n          <b>Bugs</b>\n          {' '}\n          {project.bugs}\n        </Typography>\n        <Typography>\n          <b>Fixed</b>\n          {' '}\n          {project.fixed}\n        </Typography>\n      </ListItemText>\n      <ListItemText\n        style={{\n          marginLeft: '1em'\n        }}\n      >\n        <Typography>\n          {project.description}\n        </Typography>\n      </ListItemText>\n    </ListItem>\n  );\n};\n\nProjectListItem.propTypes = {\n  project: object,\n  deleteProject: func,\n  navigateToProject: func,\n  navigateToDetails: func\n};\n\nexport default ProjectListItem;\n","import React from 'react';\nimport {\n  List\n} from '@material-ui/core';\nimport { func, object } from 'prop-types';\nimport ProjectListItem from './ProjectListItem';\n\nconst ProjectList = (props) => {\n  const {\n    projects,\n    deleteProject,\n    navigateToProject,\n    navigateToDetails\n  } = props;\n  return (\n    <List>\n      {projects.map((project) => (\n        <ProjectListItem\n          project={project}\n          deleteProject={deleteProject}\n          navigateToProject={navigateToProject}\n          navigateToDetails={navigateToDetails}\n        />\n      ))}\n    </List>\n  );\n};\n\nProjectList.propTypes = {\n  projects: object,\n  deleteProject: func,\n  navigateToProject: func,\n  navigateToDetails:func\n};\n\nexport default ProjectList;\n","import React from 'react';\nimport {\n  Container,\n  Card, Typography, Button\n} from '@material-ui/core';\nimport { object } from 'prop-types';\nimport ProjectList from './ProjectList';\n\nconst View = (props) => {\n  const { container } = props;\n  const userEligible = container.currentUser.role === 'admin'\n  || container.currentUser.role === 'projectManager';\n\n  return (\n    <Container\n      maxWidth={false}\n      style={{\n        marginTop: '1em'\n      }}\n    >\n      {userEligible\n      && (\n      <Button\n        onClick={container.navigateToAddProject}\n        variant=\"contained\"\n        color=\"primary\"\n        style={{\n          marginBottom: '1em'\n        }}\n      >\n        Add new Project\n      </Button>\n      )}\n      <Card>\n        {container.projects.length > 0\n          ? (\n            <ProjectList\n              projects={container.projects}\n              deleteProject={container.deleteProject}\n              navigateToProject={container.navigateToProject}\n              navigateToDetails={container.navigateToDetails}\n            />\n          )\n          : (\n            <Typography\n              style={{\n                margin: '1em'\n              }}\n            >\n              No Project available\n            </Typography>\n          )}\n      </Card>\n    </Container>\n  );\n};\n\nView.propTypes = {\n  container: object\n};\n\nexport default View;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Controllers from 'src/controllers/Controllers';\nimport Presenters from 'src/presenters/Presenters';\nimport LoadingView from 'src/views/loadingView';\nimport WithAuthGate from 'src/components/WithAuthGate';\nimport { object } from 'prop-types';\nimport View from './View';\n\nconst Container = (props) => {\n  const navigate = useNavigate();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { currentUser } = props;\n\n  const getProjectsFromApi = async () => {\n    const projectsResult = await\n    Presenters.getAllProjects();\n\n    if (projectsResult.success) {\n      setProjects(projectsResult.data);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getProjectsFromApi();\n  }, []);\n\n  const deleteProject = async (id) => {\n    const result = await\n    Controllers.deleteProject(id);\n\n    if (result.success) {\n      setLoading(true);\n      await getProjectsFromApi();\n    } else {\n      setLoading(false);\n      alert('Deletion failed');\n    }\n  };\n\n  const navigateToProject = (project) => {\n    navigate('/app/projects/project', { state: { project } });\n  };\n\n  const navigateToDetails = (project) => {\n    navigate('/app/project', { state: { project } });\n  };\n\n  const navigateToAddProject = () => {\n    navigate('/app/addproject', { replace: true });\n  };\n\n  return loading\n    ? <LoadingView />\n    : (\n      <View\n        container={{\n          projects,\n          deleteProject,\n          navigateToProject,\n          navigateToDetails,\n          navigateToAddProject,\n          currentUser\n        }}\n      />\n    );\n};\n\nContainer.propTypes = {\n  currentUser: object\n};\n\nconst ContainerGate = () => (\n  <WithAuthGate>\n    {Container}\n  </WithAuthGate>\n);\n\nexport default ContainerGate;\n","import Container from './Container';\n\nexport default Container;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography,\n  makeStyles, CircularProgress, MenuItem\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { object } from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst RegisterView = (props) => {\n  const classes = useStyles();\n  const { model } = props;\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              firstName: '',\n              lastName: '',\n              password: '',\n              policy: false\n            }}\n            validationSchema={\n              Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                firstName: Yup.string().max(255).required('First name is required'),\n                lastName: Yup.string().max(255).required('Last name is required'),\n                password: Yup.string().max(255).required('password is required'),\n                policy: Yup.boolean().oneOf([true], 'This field must be checked'),\n                role: Yup.number().required('Please make a selection')\n              })\n            }\n            onSubmit={(values) => {\n              model.handleSignupSubmit(values);\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Use your email to create new account\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  fullWidth\n                  helperText={touched.firstName && errors.firstName}\n                  label=\"First name\"\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  fullWidth\n                  helperText={touched.lastName && errors.lastName}\n                  label=\"Last name\"\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.role && errors.role)}\n                  select\n                  fullWidth\n                  helperText={touched.role && errors.role}\n                  label=\"Role\"\n                  name=\"role\"\n                  margin=\"normal\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.role}\n                  variant=\"outlined\"\n                >\n                  {model.roles.map((role, index) => (\n                    <MenuItem key={role.title} value={index}>{role.title}</MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box\n                  alignItems=\"center\"\n                  display=\"flex\"\n                  ml={-1}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    I have read the\n                    {' '}\n                    <Link\n                      color=\"primary\"\n                      component={RouterLink}\n                      to=\"#\"\n                      underline=\"always\"\n                      variant=\"h6\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                  <FormHelperText error>\n                    {errors.policy}\n                  </FormHelperText>\n                )}\n                <Box my={2}>\n                  {model.loading\n                    ? <CircularProgress size=\"1em\" />\n                    : (\n                      <Button\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        fullWidth\n                        size=\"large\"\n                        type=\"submit\"\n                        variant=\"contained\"\n                      >\n                        Sign up now\n                      </Button>\n                    )}\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nRegisterView.propTypes = {\n  model: object\n};\n\nexport default RegisterView;\n","import Container from './Container';\n\nexport default Container;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport View from './View';\nimport Controllers from '../../../controllers/Controllers';\nimport roles from '../../../data/roles';\n\nconst Model = (props) => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  const handleSignupSubmit = async (values) => {\n    setLoading(true);\n\n    const signupResult = await Controllers.signup({\n      accountData: {\n        name: values.firstName,\n        email: values.email,\n        password: values.password,\n        role: roles[values.role].title\n      },\n      userSpecificData: {}\n    });\n\n    const loginResult = signupResult.success\n    && await\n    Controllers.signin(values.email, values.password);\n\n    if (loginResult.success) navigate('/app/dashboard');\n    else {\n      alert('Failed to sign in');\n      setLoading(false);\n    }\n  };\n\n  return (\n    <View\n      {...props}\n      model={{\n        roles,\n        handleSignupSubmit,\n        loading,\n      }}\n    />\n  );\n};\n\nexport default Model;\n","import { string } from 'prop-types';\nimport React from 'react';\nimport {\n  Typography\n} from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top:1em;\n`;\n\nconst LabelGroup = (props) => {\n  const {\n    title,\n    label\n  } = props;\n\n  return (\n    <Container>\n      <Typography\n        variant=\"body2\"\n        style={{\n          fontWeight: 'bold'\n        }}\n      >\n        {title}\n      </Typography>\n      <Typography variant=\"body1\">\n        {label}\n      </Typography>\n    </Container>\n  );\n};\n\nLabelGroup.propTypes = {\n  label: string,\n  title: string\n};\n\nexport default LabelGroup;\n","import {\n  Card,\n  CardContent,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { object } from 'prop-types';\nimport React from 'react';\nimport LabelGroup from 'src/components/LabelGroup';\n\nconst View = (props) => {\n  const { container } = props;\n  return (\n    <Card style={{ height: '100%' }}>\n      <CardContent>\n        <Typography\n          variant=\"h1\"\n        >\n          Project Details\n        </Typography>\n        <LabelGroup\n          title=\"Project\"\n          label={container.project.name}\n        />\n        <LabelGroup\n          title=\"Description\"\n          label={container.project.description}\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nView.propTypes = {\n  container: object\n};\n\nexport default View;\n","import Container from './Container';\n\nexport default Container;\n","import { object } from 'prop-types';\nimport React from 'react';\nimport WithAuthGate from 'src/components/WithAuthGate';\nimport View from './View';\n\nconst Container = (props) => {\n  const { project } = props;\n\n  return (\n    <View\n      {...props}\n      container={{\n        project\n      }}\n    />\n  );\n};\n\nContainer.propTypes = {\n  project: object\n};\n\nexport default Container;\n","import {\n  Card,\n  CardContent,\n  Typography,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody\n} from '@material-ui/core';\nimport PerfectScroll from 'react-perfect-scrollbar';\nimport { object } from 'prop-types';\nimport React from 'react';\n\nconst View = (props) => {\n  const { container } = props;\n  return (\n    <Card style={{ height: '100%' }}>\n      <CardContent>\n        <Typography\n          variant=\"h1\"\n        >\n          People\n        </Typography>\n        <PerfectScroll>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Role</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {container.users.map((user) => (\n                <TableRow key={user.id}>\n                  <TableCell>{user.name}</TableCell>\n                  <TableCell>{user.email}</TableCell>\n                  <TableCell>{user.role}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </PerfectScroll>\n      </CardContent>\n    </Card>\n  );\n};\n\nView.propTypes = {\n  container: object\n};\n\nexport default View;\n","import Container from './Container';\n\nexport default Container;\n","import { object } from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport Presenters from 'src/presenters/Presenters';\nimport LoadingView from 'src/views/loadingView';\nimport View from './View';\n\nconst Container = (props) => {\n  const { project } = props;\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const getProjectUsersFromApi = async () => {\n    const usersRes = await\n    Presenters.getProjectUsersFromApi(project.id);\n\n    if (usersRes.success) {\n      setUsers(usersRes.data);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getProjectUsersFromApi();\n  }, []);\n\n  return loading\n    ? <LoadingView />\n    : (\n      <View\n        {...props}\n        container={{\n          project,\n          users\n        }}\n      />\n    );\n};\n\nContainer.propTypes = {\n  project: object\n};\n\nexport default Container;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  makeStyles,\n  Checkbox,\n  Link\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({\n  completeTicket,\n  handleTicketClick,\n  className,\n  tickets,\n  currentUser,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  const checkDisabled = (ticket) => {\n    const res = (\n      ticket.completed === 'true'\n      || currentUser.role === 'developer'\n    );\n\n    return res;\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          {tickets.length < 1\n            ? (\n              <Typography\n                variant=\"body1\"\n                style={{\n                  marginLeft: '1em'\n                }}\n              >\n                No ticket available\n              </Typography>\n            )\n            : (\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      Problem\n                    </TableCell>\n                    <TableCell>\n                      Priority\n                    </TableCell>\n                    <TableCell>\n                      Description\n                    </TableCell>\n                    <TableCell>\n                      Completed\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {tickets.map((ticket) => (\n                    <TableRow\n                      hover\n                      key={ticket.id}\n                    >\n                      <TableCell>\n                        <Box\n                          alignItems=\"center\"\n                          display=\"flex\"\n                        >\n                          <Link\n                            variant=\"body1\"\n                            component=\"button\"\n                            onClick={() => { handleTicketClick(ticket); }}\n                          >\n                            {ticket.problem}\n                          </Link>\n                        </Box>\n                      </TableCell>\n                      <TableCell>\n                        {ticket.priority}\n                      </TableCell>\n                      <TableCell>\n                        {ticket.description}\n                      </TableCell>\n                      <TableCell>\n                        <Checkbox\n                          onClick={() => { completeTicket(ticket.id); }}\n                          disabled={checkDisabled(ticket)}\n                          checked={ticket.completed === 'true'}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            )}\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  tickets: PropTypes.array.isRequired,\n  deleteticket: PropTypes.func,\n  handleTicketClick: PropTypes.func,\n  completeTicket: PropTypes.func,\n  currentUser: PropTypes.object\n};\n\nexport default Results;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles, Button\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({\n  navigateToNewTicket,\n  handleFindChange,\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                onChange={handleFindChange}\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Search Ticket\"\n                variant=\"outlined\"\n              />\n              <Button\n                onClick={navigateToNewTicket}\n                color=\"primary\"\n                variant=\"contained\"\n                style={{ marginTop: '1em' }}\n              >\n                Add new Ticket\n              </Button>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string,\n  handleFindChange: PropTypes.func,\n  navigateToNewTicket: PropTypes.func\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { object } from 'prop-types';\nimport ProjectDetails from 'src/views/project/ProjectDetails';\nimport ProjectPeople from 'src/views/project/ProjectPeople';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst View = (props) => {\n  const classes = useStyles();\n  const { container } = props;\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Tickets\"\n    >\n      <Container maxWidth={false}>\n        <Grid container spacing={4}>\n          <Grid item xs={12} md={6}>\n            <ProjectDetails\n              project={container.project}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <ProjectPeople\n              project={container.project}\n            />\n          </Grid>\n        </Grid>\n        <Toolbar\n          handleFindChange={container.searchName}\n          navigateToNewTicket={container.navigateToNewTicket}\n        />\n        <Box mt={3}>\n          <Results\n            tickets={container.tickets}\n            handleTicketClick={container.handleTicketClick}\n            completeTicket={container.completeTicket}\n            currentUser={container.currentUser}\n          />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nView.propTypes = {\n  container: object\n};\n\nexport default View;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { filter } from 'lodash';\nimport WithAuthGate from 'src/components/WithAuthGate';\nimport Controllers from 'src/controllers/Controllers';\nimport { object } from 'prop-types';\nimport View from './View';\nimport LoadingView from '../../loadingView';\nimport Presenters from '../../../presenters/Presenters';\n\nconst Container = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [Tickets, setTickets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filteredTickets, setFilteredTickets] = useState([]);\n  const { project } = location.state;\n  const { currentUser } = props;\n\n  const getTicketsFromApi = async () => {\n    const ticketResponse = await Presenters\n      .getCurrentUserTickets(project.id);\n\n    if (ticketResponse.success) {\n      setTickets(ticketResponse.data);\n      setFilteredTickets(ticketResponse.data);\n      setLoading(false);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getTicketsFromApi();\n  }, []);\n\n  // const deleteUser = async (id) => {\n  //   const deleteResponse = await\n  //   Controllers.deleteUser(id);\n\n  //   if (deleteResponse.success) await getTicketsFromApi();\n  //   else {\n  //     alert('User deletion failed');\n  //   }\n  // };\n\n  const match = (name, searchTerm) => {\n    const regex = new RegExp(searchTerm, 'i');\n    return name.match(regex);\n  };\n\n  const searchName = (e) => {\n    const searchTerm = e.target.value;\n    if (searchTerm.length > 0) {\n      const result = filter(Tickets, (o) => (match(o.problem, searchTerm)));\n      setFilteredTickets(result);\n    } else {\n      setFilteredTickets(Tickets);\n    }\n  };\n\n  const handleTicketClick = (ticket) => {\n    navigate('/app/ticket', { state: { ticket }, replace: true });\n  };\n\n  const navigateToNewTicket = () => {\n    navigate('/app/addticket', { state: { project } });\n  };\n\n  const completeTicket = async (ticketId) => {\n    const res = await\n    Controllers.completeTicket(ticketId);\n\n    if (res && res.success) {\n      await getTicketsFromApi();\n    }\n  };\n\n  return loading\n    ? <LoadingView />\n    : (\n      <View\n        {...props}\n        container={{\n          tickets: filteredTickets,\n          searchName,\n          handleTicketClick,\n          project,\n          navigateToNewTicket,\n          completeTicket,\n          currentUser\n        }}\n      />\n    );\n};\n\nContainer.propTypes = {\n  currentUser: object\n};\n\nconst ContainerGate = () => (\n  <WithAuthGate>\n    {Container}\n  </WithAuthGate>\n);\n\nexport default ContainerGate;\n","import Container from './Container';\n\nexport default Container;\n","import { bool, func, object } from 'prop-types';\nimport React from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Grid, TextField, Button, MenuItem, CircularProgress\n} from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport LabelGroup from '../../../components/LabelGroup';\n\nconst TicketInfo = (props) => {\n  const {\n    ticket,\n    submitForm,\n    users,\n    initialUser,\n    newUserSubmitLoading,\n    currentUser\n  } = props;\n\n  console.log(currentUser)\n\n  const checkDisabled = () => (\n    currentUser.role === 'developer'\n    || currentUser.role === 'tester'\n    || ticket.completed === 'true'\n  );\n\n  return (\n    <Card style={{ height: '100%' }}>\n      <CardContent>\n        <Typography variant=\"h1\">\n          Ticket Details\n        </Typography>\n        <Grid container style={{ marginTop: '1em' }}>\n          <Grid item xs={12} sm={6}>\n            <LabelGroup\n              title=\"Problem\"\n              label={ticket.problem}\n            />\n            <LabelGroup\n              title=\"Description\"\n              label={ticket.description}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <LabelGroup\n              title=\"Priority\"\n              label={ticket.priority}\n            />\n            <LabelGroup\n              title=\"Completed\"\n              label={ticket.completed === 'true' ? 'Yes' : 'No'}\n            />\n          </Grid>\n        </Grid>\n        <Formik\n          initialValues={{\n            user: '',\n          }}\n          validationSchema={\n          Yup.object().shape({\n            user: Yup.number().required('Selection required')\n          })\n        }\n          onSubmit={(values) => {\n            submitForm(values);\n          }}\n        >\n          {({\n            handleChange,\n            handleSubmit,\n            errors,\n            touched,\n            values,\n            handleBlur,\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <Typography\n                variant=\"subtitle2\"\n                style={{\n                  marginTop: '1em',\n                  marginBottom: '0.4em'\n                }}\n              >\n                Assigned User\n              </Typography>\n              <TextField\n                select\n                fullWidth\n                disabled={checkDisabled()}\n                onChange={handleChange}\n                error={Boolean(touched.user && errors.user)}\n                helperText={touched.user && errors.user}\n                name=\"user\"\n                label={values.user === '' ? `${initialUser.name}(${initialUser.role})` : 'Assigned User'}\n                margin=\"none\"\n                onBlur={handleBlur}\n                value={values.user}\n                variant=\"outlined\"\n              >\n                {users.map((user, index) => (\n                  <MenuItem\n                    key={user.id}\n                    value={index}\n                  >\n                    {`${user.name} (${user.role})`}\n                  </MenuItem>\n                ))}\n              </TextField>\n              {newUserSubmitLoading\n                ? (\n                  <CircularProgress\n                    size=\"1em\"\n                    style={{ marginTop: '1em' }}\n                  />\n                )\n                : (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={values.user === ''}\n                    style={{\n                      marginTop: '1em'\n                    }}\n                  >\n                    Save\n                  </Button>\n                )}\n            </form>\n          )}\n\n        </Formik>\n      </CardContent>\n    </Card>\n  );\n};\n\nTicketInfo.propTypes = {\n  ticket: object,\n  submitForm: func,\n  users: object,\n  initialUser: object,\n  newUserSubmitLoading: bool,\n  currentUser: object\n};\n\nexport default TicketInfo;\n","import { object } from 'prop-types';\nimport React from 'react';\nimport {\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText\n} from '@material-ui/core';\nimport LabelGroup from '../../../components/LabelGroup';\n\nconst CommentListItem = (props) => {\n  const { comment } = props;\n\n  return (\n    <ListItem>\n      <ListItemAvatar>\n        <Avatar>{comment.username[0]}</Avatar>\n      </ListItemAvatar>\n      <ListItemText>\n        <LabelGroup\n          title={comment.username}\n          label={comment.text}\n        />\n      </ListItemText>\n    </ListItem>\n  );\n};\n\nCommentListItem.propTypes = {\n  comment: object\n};\n\nexport default CommentListItem;\n","import { object } from 'prop-types';\nimport React from 'react';\nimport {\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  List,\n  Typography, CircularProgress\n} from '@material-ui/core';\nimport styled from 'styled-components';\nimport CommentListItem from './CommentListItem';\n\nconst Form = styled.form`\n  display:flex;\n  margin-top: 1em;\n  justify-contents:center;\n`;\n\nconst CommentsContainer = styled.div`\n  max-height: 400px;\n  overflow-y: scroll;\n  scrollbar-width:none;\n`;\n\nconst View = (props) => {\n  const { container } = props;\n  const ticketCompleted = container.ticket.completed === 'true';\n\n  return (\n    <Card style={{ height: '100%' }}>\n      <CardContent>\n        <Typography\n          variant=\"h1\"\n        >\n          Comments\n        </Typography>\n        <Form onSubmit={container.submitComment}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"Write comment here..\"\n            color=\"primary\"\n            onChange={container.changeCommentValue}\n            value={container.commentField}\n            error={container.commentError}\n            disabled={container.addLoading || ticketCompleted}\n          />\n          {container.addLoading\n            ? (\n              <CircularProgress\n                size={40}\n                style={{ marginLeft: '0.4em' }}\n              />\n            )\n            : (\n              <Button\n                disabled={ticketCompleted}\n                style={{ marginLeft: '0.4em' }}\n                variant=\"contained\"\n                type=\"submit\"\n                color=\"primary\"\n              >\n                Add\n              </Button>\n            )}\n        </Form>\n        <CommentsContainer>\n          {container.comments.length > 0\n            ? (\n              <List>\n                {container.comments.map((comment) => (\n                  <CommentListItem\n                    comment={comment}\n                  />\n                ))}\n              </List>\n            )\n            : (\n              <Typography>\n                No available comments\n              </Typography>\n            )}\n        </CommentsContainer>\n      </CardContent>\n    </Card>\n  );\n};\n\nView.propTypes = {\n  container: object\n};\n\nexport default View;\n","import Container from './Container';\n\nexport default Container;\n","import { object } from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport Controllers from 'src/controllers/Controllers';\nimport Presenters from 'src/presenters/Presenters';\nimport LoadingView from 'src/views/loadingView';\nimport View from './View';\n\nconst Container = (props) => {\n  const { ticket } = props;\n  const [loading, setLoading] = useState(true);\n  const [addLoading, setAddLoading] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [commentError, setCommentError] = useState(false);\n  const [commentField, setCommentField] = useState('');\n\n  const getCommentsFromApi = async () => {\n    const commentRes = await\n    Presenters.getCommentsForTicket(ticket.id);\n    console.log(commentRes);\n    if (commentRes.success) {\n      setComments(commentRes.data);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getCommentsFromApi();\n  }, []);\n\n  const changeCommentValue = (e) => {\n    setCommentField(e.target.value);\n  };\n\n  const submitComment = async (e) => {\n    e.preventDefault();\n\n    if (commentField.length > 0) {\n      setAddLoading(true);\n      setCommentError(false);\n      setCommentField('');\n\n      const addRes = await\n      Controllers.addCommentToTicket({\n        ticketId: ticket.id,\n        text: commentField\n      });\n\n      if (addRes.success) {\n        await getCommentsFromApi();\n      } else {\n        alert('Comment add failed');\n      }\n    } else {\n      setCommentError(true);\n    }\n\n    setAddLoading(false);\n  };\n\n  return loading\n    ? <LoadingView />\n    : (\n      <View\n        {...props}\n        container={{\n          comments,\n          changeCommentValue,\n          commentField,\n          submitComment,\n          addLoading,\n          commentError,\n          ticket\n        }}\n      />\n    );\n};\n\nContainer.propTypes = {\n  ticket: object\n};\n\nexport default Container;\n","import { object } from 'prop-types';\nimport React from 'react';\nimport FileUpload from 'react-input-files';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Box,\n  Modal,\n  IconButton, CircularProgress\n} from '@material-ui/core';\nimport {\n  AddPhotoAlternate\n} from '@material-ui/icons';\nimport styled from 'styled-components';\n\nconst Image = styled.img`\n  height: 140px;\n  margin-right:0.5em;\n  margin-top: 0.5em;\n  transition: box-shadow 0.2s ease-in;\n  &:hover{\n    cursor:pointer;\n    box-shadow: 3px 3px 6px rgba(0,0,0,0.4);\n  }\n`;\n\nconst View = (props) => {\n  const { container } = props;\n\n  return (\n    <div>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h1\">\n            Attachments\n          </Typography>\n          {container.attachLoading\n            ? (\n              <CircularProgress\n                size={20}\n              />\n            )\n            : (\n              <FileUpload\n                onChange={container.uploadImg}\n                multiple={false}\n              >\n                <IconButton>\n                  <AddPhotoAlternate />\n                </IconButton>\n              </FileUpload>\n            )}\n          <Box\n            display=\"flex\"\n            flexWrap=\"wrap\"\n          >\n            {container.attachments.length > 0\n              ? container.attachments.map((att) => (\n                <Image\n                  src={att}\n                  onClick={() => { container.openImage(att); }}\n                />\n              ))\n              : (\n                <Typography>\n                  No attachment available\n                </Typography>\n              )}\n          </Box>\n        </CardContent>\n        <Modal\n          open={container.imageOpen}\n          onClose={container.closeImage}\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '100%'\n          }}\n        >\n          <img\n            style={{\n              maxWidth: '90%',\n              maxHeight: '90%'\n            }}\n            src={container.openedImage}\n            alt=\"attachment\"\n          />\n        </Modal>\n      </Card>\n    </div>\n  );\n};\n\nView.propTypes = {\n  container: object\n};\n\nexport default View;\n","import Container from './Container';\n\nexport default Container;\n","import { object } from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport Controllers from 'src/controllers/Controllers';\nimport Presenters from 'src/presenters/Presenters';\nimport LoadingView from 'src/views/loadingView';\nimport View from './View';\n\nconst Container = (props) => {\n  const { ticket } = props;\n  const [loading, setLoading] = useState(true);\n  const [attachLoading, setAttachLoading] = useState(false);\n  const [attachments, setAttachments] = useState([]);\n  const [imageOpen, setImageOpen] = useState(false);\n  const [openedImage, setOpenedImage] = useState('');\n\n  const getImagesFromApi = async () => {\n    const imagesRes = await\n    Presenters.getImagesForTicket(ticket.id);\n\n    if (imagesRes.success) {\n      setAttachments(imagesRes.data);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getImagesFromApi();\n  }, []);\n\n  const openImage = (url) => {\n    setOpenedImage(url);\n    setImageOpen(true);\n  };\n\n  const closeImage = () => {\n    setImageOpen(false);\n  };\n\n  const uploadImg = async (files) => {\n    setAttachLoading(true);\n\n    const formData = new FormData();\n    formData.append('ticketId', ticket.id);\n    formData.append('file', files[0]);\n\n    const attachRes = await\n    Controllers.attachImgToTicket(formData);\n\n    if (attachRes.success) {\n      await getImagesFromApi();\n    } else {\n      alert('Image upload failed');\n    }\n\n    setAttachLoading(false);\n  };\n\n  return loading\n    ? <LoadingView />\n    : (\n      <View\n        {...props}\n        container={{\n          attachments,\n          imageOpen,\n          openedImage,\n          openImage,\n          closeImage,\n          uploadImg,\n          attachLoading\n        }}\n      />\n    );\n};\n\nContainer.propTypes = {\n  ticket: object\n};\n\nexport default Container;\n","import {\n  Button,\n  Card,\n  CardContent\n} from '@material-ui/core';\nimport { object } from 'prop-types';\nimport React from 'react';\n\nconst TicketMenu = (props) => {\n  const {\n    user,\n    handleDelete\n  } = props;\n\n  const userEligible = user.role !== 'developer';\n\n  return (\n    <Card>\n      <CardContent>\n        {userEligible\n        && (\n        <Button\n          onClick={handleDelete}\n        >\n          Delete Ticket\n        </Button>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nTicketMenu.propTypes = {\n  user: object,\n  handleDelete: object\n};\n\nexport default TicketMenu;\n","import { object } from 'prop-types';\nimport React from 'react';\nimport {\n  Container,\n  Grid\n} from '@material-ui/core';\nimport TicketInfo from './TicketInfo';\nimport TicketComments from '../TicketComments';\nimport TicketAttachments from '../TicketAttachments';\nimport TicketMenu from './TicketMenu';\n\nconst View = (props) => {\n  const { container } = props;\n\n  return (\n    <Container style={{ marginTop: '1em' }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TicketMenu\n            user={container.currentUser}\n            handleDelete={container.deleteThisTicket}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TicketInfo\n            ticket={container.ticket}\n            users={container.users}\n            submitForm={container.changeTicketUser}\n            initialUser={container.currentlyAssingedUser}\n            newUserSubmitLoading={container.newUserSubmitLoading}\n            currentUser={container.currentUser}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TicketComments\n            ticket={container.ticket}\n          />\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <TicketAttachments\n            ticket={container.ticket}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nView.propTypes = {\n  container: object\n};\n\nexport default View;\n","import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Controllers from 'src/controllers/Controllers';\nimport Presenters from 'src/presenters/Presenters';\nimport LoadingView from 'src/views/loadingView';\nimport { find } from 'lodash';\nimport WithAuthGate from 'src/components/WithAuthGate';\nimport View from './View';\nimport { object } from 'prop-types';\n\nconst dummyUser = {\n  currentUser: {\n    id: 1,\n    role: 'tester'\n  }\n};\n\nconst Container = (props) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { ticket } = location.state;\n  const { currentUser } = props;\n  const [loading, setLoading] = useState(true);\n  const [users, setUsers] = useState([]);\n  const [newUserSubmitLoading, setNewUserSubmitLoading] = useState(false);\n\n  const getProjectUsersFromApi = async () => {\n    const userRes = await\n    Presenters.getProjectUsersFromApi(ticket.projectid);\n\n    if (userRes.success) {\n      setUsers(userRes.data);\n    } else {\n      alert('Invalid ticket');\n    }\n    setLoading(false);\n  };\n\n  const setAssignedUser = () => {\n    if (users.length > 0) {\n      return find(users, { id: ticket.userid });\n    }\n  };\n\n  const currentlyAssingedUser = setAssignedUser();\n\n  useEffect(() => {\n    getProjectUsersFromApi();\n  }, []);\n\n  const deleteThisTicket = async () => {\n    setLoading(true);\n\n    const deleteRes = await\n    Controllers.deleteTicket(ticket.id);\n\n    if (deleteRes.success) {\n      navigate('/app/projects', { replace: true });\n    } else {\n      setLoading(false);\n      alert('Deletion failed');\n    }\n  };\n\n  const changeTicketUser = async (values) => {\n    setNewUserSubmitLoading(true);\n    const userId = users[values.user].id;\n    const data = {\n      userId,\n      ticketId: ticket.id\n    };\n\n    const changeRes = await\n    Controllers.assignUserToTicket(data);\n\n    if (changeRes.success) {\n      alert('Assigned user changed');\n    } else {\n      alert('Failed to assing user');\n    }\n    setNewUserSubmitLoading(false);\n  };\n\n  return loading\n    ? <LoadingView />\n    : (\n      <View\n        {...props}\n        container={{\n          ticket,\n          currentUser,\n          deleteThisTicket,\n          users,\n          changeTicketUser,\n          currentlyAssingedUser,\n          newUserSubmitLoading\n        }}\n      />\n    );\n};\n\nContainer.protTypes = {\n  currentUser: object\n};\n\nconst ContainerGate = () => (\n  <WithAuthGate>\n    {Container}\n  </WithAuthGate>\n);\n\nexport default ContainerGate;\n","import Container from './Container';\n\nexport default Container;\n","import { object } from 'prop-types';\nimport React from 'react';\n\nconst View = (props) => {\n  const { container } = props;\n\n  return (\n    <h1>{`project: ${container.project.id}`}</h1>\n  );\n};\n\nView.propTypes = {\n  container: object\n};\n\nexport default View;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport WithAuthGate from 'src/components/WithAuthGate';\nimport View from './View';\n\nconst Container = (props) => {\n  const location = useLocation();\n  const { project } = location.state;\n  return (\n    <View\n      {...props}\n      container={{\n        project\n      }}\n    />\n  );\n};\n\nconst ContainerGate = () => (\n  <WithAuthGate>\n    {Container}\n  </WithAuthGate>\n);\n\nexport default ContainerGate;\n","import Container from './Container';\n\nexport default Container;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { func } from 'prop-types';\n\nconst AddProjectForm = (props) => {\n  const { submitForm } = props;\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography\n          variant=\"h1\"\n        >\n          Add new Project\n        </Typography>\n        <Box\n          maxWidth=\"600px\"\n        >\n          <Formik\n            initialValues={{\n              name: '',\n              description: ''\n            }}\n            validationSchema={\n              Yup.object().shape({\n                name: Yup.string().max(255).required('Name is required'),\n                description: Yup.string().max(255).required('Description is required')\n              })\n            }\n            onSubmit={(values) => {\n              submitForm(values)\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <TextField\n                  error={Boolean(touched.name && errors.name)}\n                  fullWidth\n                  helperText={touched.name && errors.name}\n                  label=\"Project name\"\n                  margin=\"normal\"\n                  name=\"name\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.name}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.description && errors.description)}\n                  fullWidth\n                  multiline\n                  rows=\"4\"\n                  helperText={touched.description && errors.description}\n                  label=\"Description\"\n                  margin=\"normal\"\n                  name=\"description\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.description}\n                  variant=\"outlined\"\n                />\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  Next\n                </Button>\n              </form>\n            )}\n          </Formik>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nAddProjectForm.propTypes = {\n  submitForm: func\n};\n\nexport default AddProjectForm;\n","import {\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell, Card, CardContent, Checkbox, Button, Typography, CircularProgress\n} from '@material-ui/core';\nimport { bool, func, object } from 'prop-types';\nimport React from 'react';\nimport PerfectScroll from 'react-perfect-scrollbar';\nimport LoadingView from 'src/views/loadingView';\n\nconst AddProjectUserSelector = (props) => {\n  const {\n    users,\n    selectUser,\n    userLoading,\n    submitProject,\n    submitLoading\n  } = props;\n\n  return userLoading\n    ? <LoadingView />\n    : (\n      <Card style={{ marginTop: '1em' }}>\n        <CardContent>\n          <Typography\n            variant=\"h1\"\n          >\n            Attach People to Project\n          </Typography>\n          <PerfectScroll>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    Selected\n                  </TableCell>\n                  <TableCell>\n                    Name\n                  </TableCell>\n                  <TableCell>\n                    Role\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users.map((user, index) => (\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox\n                        checked={user.selected}\n                        onChange={() => { selectUser(index); }}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      {user.name}\n                    </TableCell>\n                    <TableCell>\n                      {user.role}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </PerfectScroll>\n          {submitLoading\n            ? (\n              <CircularProgress\n                size=\"1em\"\n                style={{ marginTop: '1em' }}\n              />\n            )\n            : (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={submitProject}\n                style={{ marginTop: '1em' }}\n              >\n                Add Now\n              </Button>\n            )}\n        </CardContent>\n      </Card>\n    );\n};\n\nAddProjectUserSelector.propTypes = {\n  users: object.isRequired,\n  selectUser: func,\n  userLoading: bool,\n  submitProject: func,\n  submitLoading: bool\n};\n\nexport default AddProjectUserSelector;\n","import React from 'react';\nimport { object } from 'prop-types';\nimport {\n  Container\n} from '@material-ui/core';\nimport AddProjectForm from './AddProjectForm';\nimport AddProjectUserSelector from './AddProjectUserSelector';\n\nconst View = (props) => {\n  const { container } = props;\n  return (\n    <Container style={{\n      marginTop:'1em',\n      marginBottom:'1em'\n    }}>\n      <AddProjectForm\n        submitForm={container.submitForm}\n      />\n      {container.formDone\n      && (\n      <AddProjectUserSelector\n        users={container.users}\n        selectUser={container.selectUser}\n        userLoading={container.userLoading}\n        submitProject={container.submitProject}\n        submitLoading={container.submitLoading}\n      />\n      )}\n    </Container>\n  );\n};\n\nView.propTypes = {\n  container: object\n};\n\nexport default View;\n","import React, { useEffect, useState } from 'react';\nimport Controllers from 'src/controllers/Controllers';\nimport Presenters from 'src/presenters/Presenters';\nimport { useNavigate } from 'react-router-dom';\nimport { filter } from 'lodash';\nimport WithAuthGate from 'src/components/WithAuthGate';\nimport View from './View';\n\nconst Container = () => {\n  const navigate = useNavigate();\n  const [userLoading, setUserLoading] = useState(true);\n  const [users, setUsers] = useState([]);\n  const [formDone, setFormDone] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [submitLoading, setSubmitLoading] = useState(false);\n\n  const submitForm = (values) => {\n    setFormData(values);\n    setFormDone(true);\n  };\n\n  const getUsersFromApi = async () => {\n    const userRes = await\n    Presenters.getAllUsers();\n\n    if (userRes.success) {\n      setUsers(userRes.data);\n    }\n\n    setUserLoading(false);\n  };\n\n  useEffect(() => {\n    getUsersFromApi();\n  }, []);\n\n  const selectUser = (index) => {\n    const user = users[index];\n    user.selected = !user.selected;\n\n    const updatedUsers = users;\n    updatedUsers[index] = user;\n\n    setUsers(updatedUsers);\n  };\n\n  const fetchSelectedUserIds = () => {\n    const filteredUsers = filter(users, { selected: true });\n    const userIdsArr = filteredUsers.map((user) => (\n      user.id\n    ));\n    return userIdsArr;\n  };\n\n  const submitProject = async () => {\n    setSubmitLoading(true);\n    const data = {\n      project: formData,\n      users: fetchSelectedUserIds()\n    };\n\n    const submitRes = data.users.length > 0\n      ? await\n      Controllers.addNewProject(data)\n      : alert('You have to select at least one person');\n\n    if (submitRes && submitRes.success) {\n      navigate('/app/projects/project', {\n        state: { project: submitRes.data },\n        replace: true\n      });\n    } else {\n      alert('Project addition failed');\n    }\n\n    setSubmitLoading(false);\n  };\n\n  return (\n    <View\n      container={{\n        formDone,\n        submitForm,\n        selectUser,\n        users,\n        userLoading,\n        submitProject,\n        submitLoading\n      }}\n    />\n  );\n};\n\nconst ContainerGate = () => (\n  <WithAuthGate>\n    {Container}\n  </WithAuthGate>\n);\n\nexport default ContainerGate;\n","import Container from './Container';\n\nexport default Container;\n","import React from 'react';\nimport { object } from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Container,\n  Typography,\n  Box,\n  TextField,\n  Button, MenuItem, CircularProgress\n} from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { sortedIndexBy } from 'lodash';\n\nconst View = (props) => {\n  const { container } = props;\n\n  return (\n    <Container\n      style={{\n        marginTop: '1em',\n        marginBottom: '1em'\n      }}\n    >\n      <Card>\n        <CardContent>\n          <Typography\n            variant=\"h1\"\n          >\n            Add new ticket\n          </Typography>\n          <Box\n            maxWidth=\"600px\"\n          >\n            <Formik\n              initialValues={{\n                name: '',\n                description: '',\n                priority: '',\n                userIndex: ''\n              }}\n              validationSchema={\n              Yup.object().shape({\n                name: Yup.string().max(255).required('Name is required'),\n                description: Yup.string().max(255).required('Description is required'),\n                priority: Yup.number().required('Please make a selection'),\n                userIndex: Yup.number().required('Please make a selection')\n              })\n            }\n              onSubmit={(values) => {\n                container.submitForm(values);\n              }}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                values\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Project name\"\n                    margin=\"normal\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.description && errors.description)}\n                    fullWidth\n                    multiline\n                    rows=\"4\"\n                    helperText={touched.description && errors.description}\n                    label=\"Description\"\n                    margin=\"normal\"\n                    name=\"description\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.description}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.priority && errors.priority)}\n                    fullWidth\n                    select\n                    helperText={touched.priority && errors.priority}\n                    label=\"Ticket priority\"\n                    margin=\"normal\"\n                    name=\"priority\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.priority}\n                    variant=\"outlined\"\n                  >\n                    {container.priorities.map((priority, index) => (\n                      <MenuItem\n                        key={priority}\n                        value={index}\n                      >\n                        {priority}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                  <TextField\n                    error={Boolean(touched.userIndex && errors.userIndex)}\n                    fullWidth\n                    select\n                    helperText={touched.userIndex && errors.userIndex}\n                    label=\"Assign User\"\n                    margin=\"normal\"\n                    name=\"userIndex\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.userIndex}\n                    variant=\"outlined\"\n                  >\n                    {container.users.map((user, index) => (\n                      <MenuItem\n                        key={user.id}\n                        value={index}\n                      >\n                        {`${user.name}(${user.role})`}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                  {container.addLoading\n                    ? <CircularProgress size=\"1em\" />\n                    : (\n                      <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                      >\n                        Add\n                      </Button>\n                    )}\n                </form>\n              )}\n            </Formik>\n          </Box>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n};\n\nView.propTypes = {\n  container: object\n};\n\nexport default View;\n","import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Controllers from 'src/controllers/Controllers';\nimport Presenters from 'src/presenters/Presenters';\nimport LoadingView from 'src/views/loadingView';\nimport WithAuthGate from 'src/components/WithAuthGate';\nimport View from './View';\n\nconst priorities = [\n  'high',\n  'medium',\n  'low'\n];\n\nconst Container = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { project } = location.state;\n  const [users, setUsers] = useState([]);\n  const [addLoading, setAddLoading] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const getProjectUsersFromApi = async () => {\n    const userRes = await\n    Presenters.getProjectUsersFromApi(project.id);\n\n    if (userRes.success) {\n      setUsers(userRes.data);\n    } else {\n      alert('Invalid Project');\n      navigate('/app/projects');\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getProjectUsersFromApi();\n  }, []);\n\n  const submitForm = async (values) => {\n    setAddLoading(true);\n\n    const data = {\n      problem: values.name,\n      description: values.description,\n      priority: priorities[values.priority],\n      userId: users[values.userIndex].id,\n      projectId: project.id,\n      completed: false\n    };\n\n    const submitRes = await\n    Controllers.addNewTicket(data);\n\n    if (submitRes && submitRes.success) {\n      navigate('/app/ticket', { state: { ticket: submitRes.data } });\n    } else {\n      alert('ticket could not be created');\n    }\n\n    setLoading(false);\n  };\n\n  return loading\n    ? <LoadingView />\n    : (\n      <View\n        container={{\n          users,\n          priorities,\n          submitForm,\n          addLoading\n        }}\n      />\n    );\n};\n\nconst ContainerGate = () => (\n  <WithAuthGate>\n    {Container}\n  </WithAuthGate>\n);\n\nexport default ContainerGate;\n","import Container from './Container';\n\nexport default Container;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/layouts/DashboardLayout';\nimport MainLayout from 'src/layouts/MainLayout';\nimport CustomerListView from 'src/views/users/UserListView';\nimport DashboardView from 'src/views/reports/DashboardView';\nimport LoginView from 'src/views/auth/Login/LoginView';\nimport NotFoundView from 'src/views/errors/NotFoundView';\nimport ProjectListView from 'src/views/project/ProjectListView';\nimport RegisterView from 'src/views/auth/Register';\nimport TicketListView from 'src/views/ticket/TicketListView';\nimport TicketView from 'src/views/ticket/TicketView';\nimport ProjectView from 'src/views/project/ProjectView';\nimport AddProjectView from 'src/views/project/AddProjectView';\nimport AddTicketView from 'src/views/ticket/AddTicketView';\n\nconst routes = [\n  {\n    path: 'app',\n    element: <DashboardLayout />,\n    children: [\n      { path: 'addproject', element: <AddProjectView />, exact: true, },\n      { path: 'addticket', element: <AddTicketView />, exact: true, },\n      { path: 'customers', element: <CustomerListView />, exact: true, },\n      { path: 'dashboard', element: <DashboardView />, exact: true, },\n      { path: 'project', element: <ProjectView />, exact: true, },\n      { path: 'projects', element: <ProjectListView />, exact: true, },\n      { path: 'projects/project', element: <TicketListView />, exact: true, },\n      { path: 'ticket', element: <TicketView />, exact: true, },\n      { path: '*', element: <Navigate to=\"/404\" />, exact: true, }\n    ]\n  },\n  {\n    path: '/',\n    element: <MainLayout />,\n    children: [\n      { path: 'login', element: <LoginView /> },\n      { path: 'register', element: <RegisterView /> },\n      { path: '404', element: <NotFoundView /> },\n      { path: '/', element: <Navigate to=\"/login\" /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  }\n];\n\nexport default routes;\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport React from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport 'src/mixins/chartjs';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\n\nconst App = () => {\n  const routing = useRoutes(routes);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}